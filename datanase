import requests
from bs4 import BeautifulSoup
import sqlite3
from datetime import datetime

# Функция для получения температуры с веб-страницы
def get_temperature():
    url = "https://example.com"  # Вставьте URL сайта с погодой вашего города
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')
        # Здесь необходимо найти и извлечь информацию о температуре с помощью селекторов CSS или XPath
        # Пример:
        temperature_element = soup.find('span', {'class': 'temperature'})
        if temperature_element:
            temperature = temperature_element.text.strip()
            return temperature
    return None

# Функция для создания БД и таблицы
def create_database():
    conn = sqlite3.connect('weather.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS weather_data (
                    date TEXT,
                    time TEXT,
                    temperature TEXT
                )''')
    conn.commit()
    conn.close()

# Функция для добавления данных в БД
def insert_data(date, time, temperature):
    conn = sqlite3.connect('weather.db')
    c = conn.cursor()
    c.execute("INSERT INTO weather_data (date, time, temperature) VALUES (?, ?, ?)", (date, time, temperature))
    conn.commit()
    conn.close()

# Получаем текущую дату и время
current_date = datetime.now().strftime('%Y-%m-%d')
current_time = datetime.now().strftime('%H:%M:%S')

# Получаем температуру
temperature = get_temperature()

# Создаем БД и таблицу, если они еще не существуют
create_database()

# Вносим данные в БД
if temperature:
    insert_data(current_date, current_time, temperature)
    print("Данные успешно добавлены в БД.")
else:
    print("Не удалось получить данные о температуре.")
